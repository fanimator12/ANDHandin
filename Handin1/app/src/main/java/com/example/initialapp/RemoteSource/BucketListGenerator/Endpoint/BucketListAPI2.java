//package com.example.initialapp.RemoteSource.BucketListGenerator.Endpoint;
//
///**
// * Bucketlist API
// * This is a Python-Flask based RESTful API application that allows users to log and catalog all the stuff they want to accomplish before they expire
// * <p>
// * OpenAPI spec version: 1.0.0
// * <p>
// * <p>
// * NOTE: This class is auto generated by the swagger code generator program.
// * https://github.com/swagger-api/swagger-codegen.git
// * Do not edit the class manually.
// */
//
//import com.android.volley.Response;
//import com.android.volley.VolleyError;
//
//import org.apache.http.HttpEntity;
//import org.apache.http.entity.mime.MultipartEntityBuilder;
//
//import java.util.ArrayList;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Map;
//import java.util.concurrent.ExecutionException;
//import java.util.concurrent.TimeoutException;
//
//import io.swagger.client.ApiException;
//import io.swagger.client.ApiInvoker;
//import io.swagger.client.Pair;
//import io.swagger.client.model.*;
//import io.swagger.client.model.Bucketlist;
//
//public class BucketListAPI2 {
//    String basePath = "https://bucketlist-api1.herokuapp.com";
//    ApiInvoker apiInvoker = ApiInvoker.getInstance();
//
//    public void addHeader(String key, String value) {
//        getInvoker().addDefaultHeader(key, value);
//    }
//
//    public ApiInvoker getInvoker() {
//        return apiInvoker;
//    }
//
//    public void setBasePath(String basePath) {
//        this.basePath = basePath;
//    }
//
//    public String getBasePath() {
//        return basePath;
//    }
//
//    /**
//     * Gets all bucketlists
//     *
//     * @return void
//     */
//    public void bucketlistGet() throws TimeoutException, ExecutionException, InterruptedException, ApiException {
//        Object postBody = null;
//
//        // create path and map variables
//        String path = "/bucketlist";
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//        String[] contentTypes = {
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            String localVarResponse = apiInvoker.invokeAPI(basePath, path, "GET", queryParams, postBody, headerParams, formParams, contentType, authNames);
//            if (localVarResponse != null) {
//                return;
//            } else {
//                return;
//            }
//        } catch (ApiException ex) {
//            throw ex;
//        } catch (InterruptedException ex) {
//            throw ex;
//        } catch (ExecutionException ex) {
//            if (ex.getCause() instanceof VolleyError) {
//                VolleyError volleyError = (VolleyError) ex.getCause();
//                if (volleyError.networkResponse != null) {
//                    throw new ApiException(volleyError.networkResponse.statusCode, volleyError.getMessage());
//                }
//            }
//            throw ex;
//        } catch (TimeoutException ex) {
//            throw ex;
//        }
//    }
//
//    /**
//     * Gets all bucketlists
//     *
//
//     */
//    public void bucketlistGet(final Response.Listener<String> responseListener, final Response.ErrorListener errorListener) {
//        Object postBody = null;
//
//
//        // create path and map variables
//        String path = "/bucketlist".replaceAll("\\{format\\}", "json");
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//
//
//        String[] contentTypes = {
//
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//
//
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            apiInvoker.invokeAPI(basePath, path, "GET", queryParams, postBody, headerParams, formParams, contentType, authNames,
//                    new Response.Listener<String>() {
//                        @Override
//                        public void onResponse(String localVarResponse) {
//                            responseListener.onResponse(localVarResponse);
//                        }
//                    }, new Response.ErrorListener() {
//                        @Override
//                        public void onErrorResponse(VolleyError error) {
//                            errorListener.onErrorResponse(error);
//                        }
//                    });
//        } catch (ApiException ex) {
//            errorListener.onErrorResponse(new VolleyError(ex));
//        }
//    }
//
//    /**
//     * Gets all bucketlists
//     *
//     * @param id
//     * @return void
//     */
//    public void bucketlistIdGet(Integer id) throws TimeoutException, ExecutionException, InterruptedException, ApiException {
//        Object postBody = null;
//        // verify the required parameter 'id' is set
//        if (id == null) {
//            VolleyError error = new VolleyError("Missing the required parameter 'id' when calling bucketlistIdGet",
//                    new ApiException(400, "Missing the required parameter 'id' when calling bucketlistIdGet"));
//        }
//
//        // create path and map variables
//        String path = "/bucketlist/{id}".replaceAll("\\{" + "id" + "\\}", apiInvoker.escapeString(id.toString()));
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//        String[] contentTypes = {
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            String localVarResponse = apiInvoker.invokeAPI(basePath, path, "GET", queryParams, postBody, headerParams, formParams, contentType, authNames);
//            if (localVarResponse != null) {
//                return;
//            } else {
//                return;
//            }
//        } catch (ApiException ex) {
//            throw ex;
//        } catch (InterruptedException ex) {
//            throw ex;
//        } catch (ExecutionException ex) {
//            if (ex.getCause() instanceof VolleyError) {
//                VolleyError volleyError = (VolleyError) ex.getCause();
//                if (volleyError.networkResponse != null) {
//                    throw new ApiException(volleyError.networkResponse.statusCode, volleyError.getMessage());
//                }
//            }
//            throw ex;
//        } catch (TimeoutException ex) {
//            throw ex;
//        }
//    }
//
//    /**
//     * Gets all bucketlists
//     *
//     * @param id
//     */
//    public void bucketlistIdGet(Integer id, final Response.Listener<String> responseListener, final Response.ErrorListener errorListener) {
//        Object postBody = null;
//
//        // verify the required parameter 'id' is set
//        if (id == null) {
//            VolleyError error = new VolleyError("Missing the required parameter 'id' when calling bucketlistIdGet",
//                    new ApiException(400, "Missing the required parameter 'id' when calling bucketlistIdGet"));
//        }
//
//        // create path and map variables
//        String path = "/bucketlist/{id}".replaceAll("\\{format\\}", "json").replaceAll("\\{" + "id" + "\\}", apiInvoker.escapeString(id.toString()));
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//
//
//        String[] contentTypes = {
//
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//
//
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            apiInvoker.invokeAPI(basePath, path, "GET", queryParams, postBody, headerParams, formParams, contentType, authNames,
//                    new Response.Listener<String>() {
//                        @Override
//                        public void onResponse(String localVarResponse) {
//                            responseListener.onResponse(localVarResponse);
//                        }
//                    }, new Response.ErrorListener() {
//                        @Override
//                        public void onErrorResponse(VolleyError error) {
//                            errorListener.onErrorResponse(error);
//                        }
//                    });
//        } catch (ApiException ex) {
//            errorListener.onErrorResponse(new VolleyError(ex));
//        }
//    }
//
//    /**
//     * Creates a bucketlist
//     *
//     * @param createsABucketlist
//     * @return void
//     */
//    public void createBucketlist(Bucketlist createsABucketlist) throws TimeoutException, ExecutionException, InterruptedException, ApiException {
//        Object postBody = createsABucketlist;
//        // verify the required parameter 'createsABucketlist' is set
//        if (createsABucketlist == null) {
//            VolleyError error = new VolleyError("Missing the required parameter 'createsABucketlist' when calling createBucketlist",
//                    new ApiException(400, "Missing the required parameter 'createsABucketlist' when calling createBucketlist"));
//        }
//
//        // create path and map variables
//        String path = "/bucketlist";
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//        String[] contentTypes = {
//                "application/json"
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            String localVarResponse = apiInvoker.invokeAPI(basePath, path, "POST", queryParams, postBody, headerParams, formParams, contentType, authNames);
//            if (localVarResponse != null) {
//                return;
//            } else {
//                return;
//            }
//        } catch (ApiException ex) {
//            throw ex;
//        } catch (InterruptedException ex) {
//            throw ex;
//        } catch (ExecutionException ex) {
//            if (ex.getCause() instanceof VolleyError) {
//                VolleyError volleyError = (VolleyError) ex.getCause();
//                if (volleyError.networkResponse != null) {
//                    throw new ApiException(volleyError.networkResponse.statusCode, volleyError.getMessage());
//                }
//            }
//            throw ex;
//        } catch (TimeoutException ex) {
//            throw ex;
//        }
//    }
//
//    /**
//     * Creates a bucketlist
//     *
//     * @param createsABucketlist
//     */
//    public void createBucketlist(Bucketlist createsABucketlist, final Response.Listener<String> responseListener, final Response.ErrorListener errorListener) {
//        Object postBody = createsABucketlist;
//
//        // verify the required parameter 'createsABucketlist' is set
//        if (createsABucketlist == null) {
//            VolleyError error = new VolleyError("Missing the required parameter 'createsABucketlist' when calling createBucketlist",
//                    new ApiException(400, "Missing the required parameter 'createsABucketlist' when calling createBucketlist"));
//        }
//
//        // create path and map variables
//        String path = "/bucketlist".replaceAll("\\{format\\}", "json");
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//
//
//        String[] contentTypes = {
//                "application/json"
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//
//
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            apiInvoker.invokeAPI(basePath, path, "POST", queryParams, postBody, headerParams, formParams, contentType, authNames,
//                    new Response.Listener<String>() {
//                        @Override
//                        public void onResponse(String localVarResponse) {
//                            responseListener.onResponse(localVarResponse);
//                        }
//                    }, new Response.ErrorListener() {
//                        @Override
//                        public void onErrorResponse(VolleyError error) {
//                            errorListener.onErrorResponse(error);
//                        }
//                    });
//        } catch (ApiException ex) {
//            errorListener.onErrorResponse(new VolleyError(ex));
//        }
//    }
//
//    /**
//     * Deletes a bucketlist
//     *
//     * @param id
//     * @return void
//     */
//    public void deleteBucket(Integer id) throws TimeoutException, ExecutionException, InterruptedException, ApiException {
//        Object postBody = null;
//        // verify the required parameter 'id' is set
//        if (id == null) {
//            VolleyError error = new VolleyError("Missing the required parameter 'id' when calling deleteBucket",
//                    new ApiException(400, "Missing the required parameter 'id' when calling deleteBucket"));
//        }
//
//        // create path and map variables
//        String path = "/bucketlist/{id}".replaceAll("\\{" + "id" + "\\}", apiInvoker.escapeString(id.toString()));
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//        String[] contentTypes = {
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            String localVarResponse = apiInvoker.invokeAPI(basePath, path, "DELETE", queryParams, postBody, headerParams, formParams, contentType, authNames);
//            if (localVarResponse != null) {
//                return;
//            } else {
//                return;
//            }
//        } catch (ApiException ex) {
//            throw ex;
//        } catch (InterruptedException ex) {
//            throw ex;
//        } catch (ExecutionException ex) {
//            if (ex.getCause() instanceof VolleyError) {
//                VolleyError volleyError = (VolleyError) ex.getCause();
//                if (volleyError.networkResponse != null) {
//                    throw new ApiException(volleyError.networkResponse.statusCode, volleyError.getMessage());
//                }
//            }
//            throw ex;
//        } catch (TimeoutException ex) {
//            throw ex;
//        }
//    }
//
//    /**
//     * Deletes a bucketlist
//     *
//     * @param id
//     */
//    public void deleteBucket(Integer id, final Response.Listener<String> responseListener, final Response.ErrorListener errorListener) {
//        Object postBody = null;
//
//        // verify the required parameter 'id' is set
//        if (id == null) {
//            VolleyError error = new VolleyError("Missing the required parameter 'id' when calling deleteBucket",
//                    new ApiException(400, "Missing the required parameter 'id' when calling deleteBucket"));
//        }
//
//        // create path and map variables
//        String path = "/bucketlist/{id}".replaceAll("\\{format\\}", "json").replaceAll("\\{" + "id" + "\\}", apiInvoker.escapeString(id.toString()));
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//
//
//        String[] contentTypes = {
//
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//
//
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            apiInvoker.invokeAPI(basePath, path, "DELETE", queryParams, postBody, headerParams, formParams, contentType, authNames,
//                    new Response.Listener<String>() {
//                        @Override
//                        public void onResponse(String localVarResponse) {
//                            responseListener.onResponse(localVarResponse);
//                        }
//                    }, new Response.ErrorListener() {
//                        @Override
//                        public void onErrorResponse(VolleyError error) {
//                            errorListener.onErrorResponse(error);
//                        }
//                    });
//        } catch (ApiException ex) {
//            errorListener.onErrorResponse(new VolleyError(ex));
//        }
//    }
//
//    /**
//     * Edits a bucketlist title
//     *
//     * @param id
//     * @param body Update a bucket
//     * @return void
//     */
//    public void editBucket(Integer id, Bucketlist body) throws TimeoutException, ExecutionException, InterruptedException, ApiException {
//        Object postBody = body;
//        // verify the required parameter 'id' is set
//        if (id == null) {
//            VolleyError error = new VolleyError("Missing the required parameter 'id' when calling editBucket",
//                    new ApiException(400, "Missing the required parameter 'id' when calling editBucket"));
//        }
//
//        // create path and map variables
//        String path = "/bucketlist/{id}".replaceAll("\\{" + "id" + "\\}", apiInvoker.escapeString(id.toString()));
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//        String[] contentTypes = {
//                "application/json"
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            String localVarResponse = apiInvoker.invokeAPI(basePath, path, "PUT", queryParams, postBody, headerParams, formParams, contentType, authNames);
//            if (localVarResponse != null) {
//                return;
//            } else {
//                return;
//            }
//        } catch (ApiException ex) {
//            throw ex;
//        } catch (InterruptedException ex) {
//            throw ex;
//        } catch (ExecutionException ex) {
//            if (ex.getCause() instanceof VolleyError) {
//                VolleyError volleyError = (VolleyError) ex.getCause();
//                if (volleyError.networkResponse != null) {
//                    throw new ApiException(volleyError.networkResponse.statusCode, volleyError.getMessage());
//                }
//            }
//            throw ex;
//        } catch (TimeoutException ex) {
//            throw ex;
//        }
//    }
//
//    /**
//     * Edits a bucketlist title
//     *
//     * @param id    * @param body Update a bucket
//     */
//    public void editBucket(Integer id, Bucketlist body, final Response.Listener<String> responseListener, final Response.ErrorListener errorListener) {
//        Object postBody = body;
//
//        // verify the required parameter 'id' is set
//        if (id == null) {
//            VolleyError error = new VolleyError("Missing the required parameter 'id' when calling editBucket",
//                    new ApiException(400, "Missing the required parameter 'id' when calling editBucket"));
//        }
//
//        // create path and map variables
//        String path = "/bucketlist/{id}".replaceAll("\\{format\\}", "json").replaceAll("\\{" + "id" + "\\}", apiInvoker.escapeString(id.toString()));
//
//        // query params
//        List<Pair> queryParams = new ArrayList<Pair>();
//        // header params
//        Map<String, String> headerParams = new HashMap<String, String>();
//        // form params
//        Map<String, String> formParams = new HashMap<String, String>();
//
//
//        String[] contentTypes = {
//                "application/json"
//        };
//        String contentType = contentTypes.length > 0 ? contentTypes[0] : "application/json";
//
//        if (contentType.startsWith("multipart/form-data")) {
//            // file uploading
//            MultipartEntityBuilder localVarBuilder = MultipartEntityBuilder.create();
//
//
//            HttpEntity httpEntity = localVarBuilder.build();
//            postBody = httpEntity;
//        } else {
//            // normal form params
//        }
//
//        String[] authNames = new String[]{"api_key"};
//
//        try {
//            apiInvoker.invokeAPI(basePath, path, "PUT", queryParams, postBody, headerParams, formParams, contentType, authNames,
//                    new Response.Listener<String>() {
//                        @Override
//                        public void onResponse(String localVarResponse) {
//                            responseListener.onResponse(localVarResponse);
//                        }
//                    }, new Response.ErrorListener() {
//                        @Override
//                        public void onErrorResponse(VolleyError error) {
//                            errorListener.onErrorResponse(error);
//                        }
//                    });
//        } catch (ApiException ex) {
//            errorListener.onErrorResponse(new VolleyError(ex));
//        }
//    }
//}
//
